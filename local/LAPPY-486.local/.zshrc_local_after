############
#### 4C ####
############

export VF2_PROJECT_PATH="~/development/4C/voxsupFrontend2"
export PYTHON_2_ENVIRONMENT="$VF2_PROJECT_PATH/env2"
# base
alias vox="cd $VF2_PROJECT_PATH"

alias voxa="vox && source env/bin/activate"
alias vox2="vox && source env2/bin/activate"


alias vf2shell="voxa && python server/manage.py shell"
alias vf2sh2ll="vox2 && python server/manage.py shell"
alias vfc="code ~/development/4C/vf2-workspace.code-workspace"
alias notes="code ~/development/notes.code-workspace"

alias voxcel="voxa && cd server && celery -A celery_main.celery worker -Q celery --concurrency=4 -l Debug"
alias voxc2l="vox2 && cd server && celery -A celery_main.celery worker -Q celery --concurrency=4 -l Debug"

alias load_node="loadnvm_no_completions && nvm use 10"

alias voxnode="vox && load_node"
alias voxanode="voxa && load_node"
alias vox2node="vox2 && voxnode"

alias voxbase="$VF2_PROJECT_PATH/tools/debug"

alias voxall="voxnode && voxbase"
alias vox2all="vox2node && EXTS=hot PYTHON_ENVIRONMENT=${PYTHON_2_ENVIRONMENT} voxbase"

# services
alias voxs="voxanode && EXTS=admin,scope,snapchat,reportCenter voxbase"
alias voxl="voxanode && EXTS=admin,scope,linkedin voxbase"
alias voxf="voxanode && EXTS=admin,scope,facebook voxbase"
alias voxp="voxanode && EXTS=admin,scope,pinterest voxbase"
alias voxc="voxanode && EXTS=admin,scope,creativeHub,brandProfiles,facebook voxbase"
alias voxsc="voxanode && EXTS=admin,scope,creativeHub,snapchat,reportCenter voxbase"
alias voxclc="voxanode && EXTS=admin,scope,creativeHub,snapchat,linkedin,reportCenter voxbase"
alias voxcc="voxanode && EXTS=admin,snapchat,facebook,crossChannel,creativeHub, voxbase"

# staying up to date
alias deps="voxa && pip install -r requirements.txt && voxnode && npm install"
alias d2ps="vox2 && pip install -r requirements.txt && voxnode && npm install"
alias alemb="voxa && cd db_versioning && alembic upgrade head && cd ../"
alias vox-alembic-upgrade="alemb"

# misc. 4C
alias tunnel="cd $VF2_PROJECT_PATH/tools && node tunnel"
alias release-candy="git checkout release-candy && git fetch upstream && git reset --hard upstream/release-candy"
alias prod-bugfix="git checkout prod-bugfix && git fetch upstream && git reset --hard upstream/prod-bugfix"

#################
#### General ####
#################

# misc.
alias chrome="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --auto-open-devtools-for-tabs"
alias ll="gls --color=auto --group-directories-first"
alias gds="git diff --stat"

# macOS
alias lock="mac lock"
alias nap="mac sleep"
alias audio="sudo kill `ps -ax | grep 'coreaudiod' | grep 'sbin' | awk '{print $1}'`"

# zshrc
alias zshrc="code ~/.zshrc_local_after"
alias srczsh="source ~/.zshrc"

# dev-stuff
alias arduino="open '/Applications/Arduino.app'"

eval "$(thefuck --alias)"

export PATH=/usr/local/bin:/usr/local/sbin:~/bin:$PATH
export VIRTUAL_ENV_DISABLE_PROMPT=0
export DEFAULT_USER="carterkonz"

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# VSCode CLI
export PATH="/Applications/Visual Studio Code.app/Contents/Resources/app/bin:$PATH"

export PATH="/usr/local/opt/mariadb@10.3/bin:$PATH"
export PATH="/usr/local/opt/openssl/bin:$PATH"
export LDFLAGS="${LDFLAGS} -L/usr/local/opt/openssl/lib"
export CPPFLAGS="${CPPFLAGS} -I/usr/local/opt/openssl/include"
export LDFLAGS="${LDFLAGS} -L/usr/local/opt/zlib/lib"
export CPPFLAGS="${CPPFLAGS} -I/usr/local/opt/zlib/include"
export LDFLAGS="${LDFLAGS} -L/usr/local/opt/sqlite/lib"
export CPPFLAGS="${CPPFLAGS} -I/usr/local/opt/sqlite/include"
export PKG_CONFIG_PATH="${PKG_CONFIG_PATH} /usr/local/opt/zlib/lib/pkgconfig"
export PKG_CONFIG_PATH="${PKG_CONFIG_PATH} /usr/local/opt/sqlite/lib/pkgconfig"

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

eval "$(pyenv init -)"
